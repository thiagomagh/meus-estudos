/* 
 - Grid Layout is a tool that CSS gives us to easily align 
 items and create two-dimensional layouts. 

 - The grid container is the element that holds grid items. 
 Grid items are direct children of grid container.
*/

.container {
    max-width: 960px;
    margin: 100px auto;
    padding: 10px;

    /* Create a grid container. */
    display: grid;

    /* Specify the number of columns and their sizes. */
    /* grid-template-columns: 100px 200px 300px; */
    /* grid-template-columns: 30% 40% 30%; */

    /* 
     fractional units: defines the column size from 
     the available space. 
    */
    /* grid-template-columns: 1fr 3fr 2fr; */

    /* Repeat three times 1fr. */
    /* grid-template-columns: repeat(3, 1fr); */

    /*Automatically fills the available space with columns. */
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));

    /* Create space between the columns. */
    /* column-gap: 10px; */

    /* Create space between the rows. */
    /* row-gap: 10px; */

    /* Shortcut for column and row-gap. */
    gap: 10px;

    /* Sets the default row height for all items. */
    /* grid-auto-rows: 200px; */

    /* Set a height range for the rows. */
    /* grid-auto-rows: minmax(100px, auto); */

    /* Specify the number of rows and their sizes. */
    /* grid-template-rows: 200px 100px 200px; */
    /* grid-template-rows: repeat(3, 1fr); */

    /* 
     Specifies the default alignment for items 
     (block direction/top and bottom). 
    */
    /* Values: stretch, start, center, end. */
    /* align-items: end; */

    /* 
     Specifies the default alignment for items 
     (inline direction/left and right).
    */
    /* 
     Values: start, center, end, space-between, space-around, 
     space-evenly. 
    */
    /* justify-content: end; */
}

.item {
    background: steelblue;
    color: #fff;
    font-size: 20px;
    padding: 20px;
    border: skyblue 1px solid;
}

.item-1 {
    background: #ce8038;

    /* Defines on which column the item will start. */
    /* grid-column-start: 1; */

    /* Defines on which column the item will end. */
    /* grid-column-end: 3; */

    /* Shortcut for grid-column-start and grid-column-end */
    grid-column: 1 / 3;

    /* Start at 1 and span 2 (expand). */
    grid-column: 1 / span 2;;
}

.item-2 {
    height: 100px;
    width: 100px;

    /* 
     Sets the default alignment for a specific item 
     (block direction/top and bottom).
    */
    align-self: center;

    /* 
     Sets the default alignment for a specific item 
     (inline direction/left and right).
    */
    justify-self: center;
}

.item-3 {
    background: #b15050;

    /* Defines on which row the item will start and end. */
    grid-row: 2 / 4;
}

.item-4 {
    background: #46a04e;

    /* Defines on which row the item will start and end. */
    grid-row: 2 / 4;
}

/* CSS base style */
* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

body {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 16px;
    line-height: 1.5;
    color: #333;
    background: #f5f5f5;
}

@media(max-width: 500px) {
    .container {
        grid-template-columns: 1fr;
    }
}
